load_module modules/ngx_http_headers_more_filter_module.so;
#user  nobody;
worker_processes  auto;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


# start nginx
# nginx -s stop
# nginx -s reload
# Если вдруг изменения в конфиге не видны, стоит почистить  кэш браузера

events {
    worker_connections  1024;
}


http {
    upstream backend {
        server 127.0.0.1:44001 weight=2;
        server 127.0.0.1:44002 weight=1;
        server 127.0.0.1:44003 weight=1;
    }

    # На винде стандартная сборка не поддерживает.
    # Можно попробовать перекомпилировать http://nginx.org/en/docs/howto_build_on_win32.html 
    # Или перейти на подсистему ubuntu например
    more_set_headers "Server: snake"; 

    # Кеширующий хост
    server {
        listen 80;

        location / {
            proxy_pass http://127.0.0.1:2345/;
            proxy_cache_methods GET;   
            proxy_cache_valid any 1h; # каждая страница будет сохраняться в кеш на 1 час
        }
    }
  
    # Основной хост
    server {
        listen       2345;
        #add_header Server snake always; # добавляет второй хедер

        access_log /mnt/d/GitHub/bmstu_web/log/access.log;
        error_log /mnt/d/GitHub/bmstu_web/log//error.log;

        location /static/ {
            root /mnt/d/GitHub/bmstu_web/;
        }

        location / {
            return 301 /static/;
        }

        # Игрорирование /test/ (редирект на /)
	location /test/ {
            rewrite ^/test/(.*)$ /$1 last;
            #или: return 301 /;
        }
	
	# Все что после v1/ будет дублировано в конец редиректа
        location /api/v1/ {
            proxy_pass https://backend/api/;
            proxy_no_cache 1;

            #proxy_set_header Host $host;
            #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            #proxy_set_header X-Real-IP $remote_addr;
        }

        location /swagger/ {
            proxy_pass https://backend/swagger/;
            proxy_no_cache 1;
        }

        location /api/ {
            proxy_pass https://backend/api/;
            proxy_no_cache 1;
        }

        location = /status {
            stub_status;
        }
    }

    #Включение сжатия
    gzip on;
    gzip_comp_level 5; # уровень сжатия (9 - эффективный, но медленный)
 
    # Папка для кеша
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=all:32m max_size=1g;

}
